{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","messageElement","document","createElement","innerText","classList","add","body","append","module","exports"],"mappings":";AACA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACWF,oBAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GADzE,kBAON,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAiBC,SAASC,cAAc,OAE9CF,EAAeG,UAAYJ,EAC3BC,EAAeI,UAAUC,IAAI,WAC7BJ,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.2430aa8c.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable max-len */\n'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      resolve(`\n        It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.\n      `);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const messageElement = document.createElement('div');\n\n  messageElement.innerText = message;\n  messageElement.classList.add('message');\n  document.body.append(messageElement);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}